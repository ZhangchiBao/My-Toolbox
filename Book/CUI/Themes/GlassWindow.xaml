<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CUI.Controls">
    <!--非激活时标题栏的颜色-->
    <SolidColorBrush x:Key="TitleBackgroundBrush" Color="WhiteSmoke" />
    <!--激活时标题栏的颜色-->
    <SolidColorBrush x:Key="ActiveTitleBackgroundBrush" Color="Blue" />
    <!--标题栏字体的颜色-->
    <SolidColorBrush x:Key="TitleForegroundBrush" Color="Black" />

    <!--标题按钮鼠标经过时的颜色-->
    <SolidColorBrush x:Key="ButtonMouseOverBrush" Color="#FF66BBEC" />
    <!--标题按钮鼠标按下时的颜色-->
    <SolidColorBrush x:Key="ButtonMousePressBrush" Color="#FF2A9DDE" />

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

    <!--正常按钮背景色-->
    <LinearGradientBrush x:Key="ButtonBackGroundBrushKey" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#19C9C9C9" Offset="0"/>
        <GradientStop Color="#198F8D8D" Offset="1"/>
        <GradientStop Color="#26A6A2A2" Offset="0.632"/>
        <GradientStop Color="#266C6868" Offset="0.845"/>
    </LinearGradientBrush>
    <!--鼠标经过时按钮背景色-->
    <SolidColorBrush x:Key="MouseOverButtonBackGroundBrushKey" Color="#FF66BBEC" />
    <!--鼠标按下时按钮背景色-->
    <SolidColorBrush x:Key="MousePressButtonBackGroundBrushKey" Color="#FF2A9DDE" />
    <!--鼠标经过时的按钮阴影效果-->
    <DropShadowEffect x:Key="MouseOverButtonShadow" BlurRadius="20" Direction="0" RenderingBias="Performance"  ShadowDepth="4" Color="#FF23C8D8"/>
    <ControlTemplate x:Key="WindowTemplateKey" TargetType="{x:Type local:GlassWindow}">
        <Border Background="{TemplateBinding Background}" 
			BorderBrush="{TemplateBinding BorderBrush}" 
			BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <AdornerDecorator>
                    <ContentPresenter />
                </AdornerDecorator>
                <ResizeGrip Visibility="Collapsed" 
					IsTabStop="false" 
					HorizontalAlignment="Right" 
					x:Name="WindowResizeGrip" 
					VerticalAlignment="Bottom" />
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" 
						Value="CanResizeWithGrip" />
                    <Condition Property="WindowState" 
						Value="Normal" />
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" 
					TargetName="WindowResizeGrip" 
					Value="Visible" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--最小化按钮-->
    <Style x:Key="MinButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="Black"/>
        <!--修改模板属性-->
        <Setter Property="Template">
            <Setter.Value>
                <!--控件模板-->
                <ControlTemplate TargetType="{x:Type Button}">
                    <!--背景色-->
                    <Border x:Name="borderRoot" BorderThickness="1" CornerRadius="2" BorderBrush="#FF7A7A7A" Background="{TemplateBinding Background}"						
                            >
                        <Grid x:Name="gridBack" HorizontalAlignment="Stretch" Margin="1" Width="Auto" Background="{StaticResource ButtonBackGroundBrushKey}">
                            <!--按钮内容-->
                            <Rectangle Fill="#FFF3F3F3" HorizontalAlignment="Stretch" Margin="12,8" RadiusY="0" RadiusX="0" Stroke="Black" StrokeThickness="1" Width="Auto"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="gridBack" 
                                    Value="{StaticResource ButtonMouseOverBrush}"/>
                            <Setter Property="Effect" Value="{StaticResource MouseOverButtonShadow}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="gridBack" 
                                    Value="{StaticResource ButtonMousePressBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--最大化按钮-->
    <Style x:Key="MaxButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="Black"/>
        <!--修改模板属性-->
        <Setter Property="Template">
            <Setter.Value>
                <!--控件模板-->
                <ControlTemplate TargetType="{x:Type Button}">
                    <!--背景色-->
                    <Border x:Name="borderRoot" BorderThickness="1" CornerRadius="2" BorderBrush="#FF7A7A7A" Background="{TemplateBinding Background}"						
                            >
                        <Grid x:Name="gridBack" HorizontalAlignment="Stretch" Margin="1" Width="Auto" Background="{StaticResource ButtonBackGroundBrushKey}">
                            <!--按钮内容-->

                            <Rectangle x:Name="RectOut" HorizontalAlignment="Stretch" Margin="12,4" RadiusY="0" RadiusX="0" Stroke="Black" StrokeThickness="1" Width="Auto" Fill="{x:Null}"/>
                            <Rectangle x:Name="RectFill" HorizontalAlignment="Stretch" Margin="13,5" RadiusY="0" RadiusX="0" Stroke="White" StrokeThickness="3" Width="Auto" Fill="{x:Null}"/>
                            <Rectangle x:Name="RectIn" Fill="{x:Null}" Height="Auto" Margin="15,7" RadiusY="0" RadiusX="0" Stroke="Black" StrokeThickness="1" VerticalAlignment="Stretch"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="gridBack" 
                                    Value="{StaticResource ButtonMouseOverBrush}"/>
                            <Setter Property="Effect" Value="{StaticResource MouseOverButtonShadow}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="gridBack" 
                                    Value="{StaticResource ButtonMousePressBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--还原化按钮-->
    <Style x:Key="NormalButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="Black"/>
        <!--修改模板属性-->
        <Setter Property="Template">
            <Setter.Value>
                <!--控件模板-->
                <ControlTemplate TargetType="{x:Type Button}">
                    <!--背景色-->
                    <Border x:Name="borderRoot" BorderThickness="1" CornerRadius="2" BorderBrush="#FF7A7A7A" Background="{TemplateBinding Background}"						
                            >
                        <Grid x:Name="gridBack" HorizontalAlignment="Stretch" Margin="1" Width="Auto" Background="{StaticResource ButtonBackGroundBrushKey}">
                            <!--按钮内容-->
                            <Path Data="M15,5.1 L15,2.2 27.9,2.2 27.9,13 26,13 26,5.1 z" Fill="White" HorizontalAlignment="Stretch" Height="Auto" Margin="14.891,2.125,11.937,5.521" Stretch="Fill" Stroke="{x:Null}" StrokeThickness="1" VerticalAlignment="Stretch" Width="Auto"/>
                            <Rectangle x:Name="RectOut" HorizontalAlignment="Stretch" Margin="12,5.5,14,2.5" RadiusY="0" RadiusX="0" Stroke="Black" StrokeThickness="1" Width="Auto" Fill="{x:Null}"/>
                            <Rectangle x:Name="RectFill" HorizontalAlignment="Stretch" Margin="13,6.5,15,3.5" RadiusY="0" RadiusX="0" Stroke="White" StrokeThickness="3" Width="Auto" Fill="{x:Null}"/>
                            <Rectangle x:Name="RectIn" Fill="{x:Null}" Height="Auto" Margin="15,8.5,17,5.5" RadiusY="0" RadiusX="0" Stroke="Black" StrokeThickness="1" VerticalAlignment="Stretch"/>
                            <Path Data="M14.9,5.5 L14.9,2.2 30,2.2 30,14.5 27.2,14.5" Fill="{x:Null}" Height="Auto" Margin="14.875,2.031,10.844,5.469" Stretch="Fill" Stroke="Black" StrokeThickness="1" VerticalAlignment="Stretch"/>
                        </Grid>
                    </Border>


                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="gridBack" 
                                    Value="{StaticResource ButtonMouseOverBrush}"/>
                            <Setter Property="Effect" Value="{StaticResource MouseOverButtonShadow}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="gridBack" 
                                    Value="{StaticResource ButtonMousePressBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--关闭按钮-->
    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="Black"/>
        <!--修改模板属性-->
        <Setter Property="Template">
            <Setter.Value>
                <!--控件模板-->
                <ControlTemplate TargetType="{x:Type Button}">
                    <!--背景色-->
                    <Border x:Name="borderRoot" BorderThickness="1" CornerRadius="2" BorderBrush="#FF7A7A7A" Background="{TemplateBinding Background}"						
                            >
                        <Grid x:Name="gridBack" HorizontalAlignment="Stretch" Margin="1" Width="Auto" Background="{StaticResource ButtonBackGroundBrushKey}">
                            <!--按钮内容-->
                            <Path Data="M21.609715,11.93784 L25.34425,15.37525 28.083374,12.50025 24.458783,8.9585835 28.208705,5.2507768 25.438112,2.4175909 21.542149,6.1463261 17.603987,2.4589231 14.853967,5.3546802 18.656427,9.0004176 15.093731,12.469076 17.89076,15.344001 z" Fill="White" HorizontalAlignment="Stretch" Margin="13,3" Stretch="Fill" Stroke="#FF131313" StrokeThickness="1" Width="Auto"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="gridBack" Value="Red"/>
                            <Setter Property="Effect" Value="{StaticResource MouseOverButtonShadow}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="gridBack" Value="#FFDC4C4C"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--窗口激活时的阴影效果-->
    <DropShadowEffect x:Key="ActivedWindowOutFrameShadow" BlurRadius="18" Direction="-90" RenderingBias="Performance"  ShadowDepth="3"/>
    <!--窗口模板-->
    <ControlTemplate x:Key="BaseWindowControlTemplate" TargetType="{x:Type local:GlassWindow}">
        <!--<Grid Margin="{TemplateBinding WindowShadowMargin}">-->
        <!--外边框-->
        <Border x:Name="PART_borderFrame" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="6"
		     	BorderThickness="1"  SnapsToDevicePixels="True">
            <!--<Border.Effect>
                    <DropShadowEffect BlurRadius="6" Direction="-90" RenderingBias="Performance"  ShadowDepth="1"/>
                </Border.Effect>-->
            <!--<Border.Effect>
                    <BlurEffect KernelType="Gaussian" Radius="10"/>
                </Border.Effect>-->

            <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <!--标题栏，设计高度，及标题高度，背景设置最低透明度，可以响应鼠标-->
                <Border Width="Auto" Height="Auto" CornerRadius="0" 
					        x:Name="borderTitle" Grid.ColumnSpan="1" Background="#02EEECEC" Margin="3">
                    <Grid >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <!-- 标题背部内容绑定-->
                        <ContentControl Margin="0" Grid.Row="0" Grid.ColumnSpan="2" Content="{TemplateBinding TitleBackContent}" WindowChrome.IsHitTestVisibleInChrome="True"/>
                        <!-- 左侧文本及图片 -->
                        <StackPanel Grid.Column="0" Grid.ColumnSpan="1" Margin="2" Orientation="Horizontal" VerticalAlignment="Top">
                            <!--窗口图标显示-->
                            <Image x:Name="image" HorizontalAlignment="Stretch" Margin="0,0,5,0" VerticalAlignment="Top" Width="Auto" Source="{TemplateBinding Icon}" Height="20"/>
                            <!-- 标题左侧分内容绑定 -->
                            <ContentControl Content="{TemplateBinding TitleLeftContent}" WindowChrome.IsHitTestVisibleInChrome="True"/>
                            <!--窗口标题文字显示-->
                            <Grid VerticalAlignment="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="6"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="6"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="2"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="2"/>
                                </Grid.RowDefinitions>
                                <Rectangle Fill="#FFF0ECEC" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Grid.RowSpan="2">
                                    <Rectangle.Effect>
                                        <BlurEffect Radius="15" KernelType="Gaussian">
                                        </BlurEffect>
                                    </Rectangle.Effect>
                                </Rectangle>
                                <TextBlock     x:Name="Title"  FontSize="14" 
								                  Foreground="Black" VerticalAlignment="Center"
                                                  Text="{TemplateBinding Title}" HorizontalAlignment="Stretch" Width="Auto"
                                                Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="1" Grid.RowSpan="1">

                                </TextBlock>

                            </Grid>

                        </StackPanel>
                        <!-- 右侧Windows按钮-->
                        <StackPanel Grid.Column="1" HorizontalAlignment="Right" 
							Orientation="Horizontal" VerticalAlignment="Top" WindowChrome.IsHitTestVisibleInChrome="True">
                            <!-- 标题右侧部分内容绑定，位于Windows按钮左边,距离顶部3mm,与TitleBackContent一致 -->
                            <ContentControl  Content="{TemplateBinding TitleRightContent}" Margin="0"/>
                            <!--最小化按钮-->
                            <Button x:Name="btnMin" Margin="0" Style="{StaticResource MinButtonStyle}" ToolTip="最小化" Background="#0C74B8E8"
								Command="{Binding MinWindowCommand, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Top"
								Visibility="{Binding MinButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}" Width="45" Height="24"/>
                            <!--最大化按钮-->
                            <StackPanel Orientation="Horizontal" Visibility="{Binding MaxButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}" Margin="0">
                                <Button x:Name="Restore" Command="{Binding MaxWindowCommand, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="还原"  Visibility="Collapsed" 
                                                        Style="{StaticResource NormalButtonStyle }" Width="45" Height="24" Background="#0C74B8E8" VerticalAlignment="Top">
                                </Button>
                                <Button x:Name="Maximize" Command="{Binding MaxWindowCommand, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="最大化"  
                                                        Style="{StaticResource MaxButtonStyle}" Width="45" Height="24" Background="#0C74B8E8" VerticalAlignment="Top">
                                </Button>
                            </StackPanel>
                            <!--关闭按钮-->
                            <Button x:Name="btnClose" Margin="0" Style="{StaticResource CloseButtonStyle}" ToolTip="关闭窗口" Background="#0C74B8E8"
								Command="{Binding CloseWindowCommand, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Top"
								Visibility="{Binding CloseButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}" Width="45" Height="24"/>

                        </StackPanel>

                    </Grid>
                </Border>
                <!--内容区,Margin表示距离外边框的距离-->
                <Border Margin="{TemplateBinding BorderThickness}" Grid.Row="1" Background="{TemplateBinding Background}" 
                        BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}">
                    <ContentPresenter HorizontalAlignment="Stretch"/>
                </Border>
            </Grid>
        </Border>


        <!--</Grid>-->
        <ControlTemplate.Triggers>
            <!--窗口激活时的操作-->
            <Trigger Property="IsActive" Value="True">
                <Setter Property="GlassBackgroundBrush" Value="{DynamicResource ActiveTitleBackgroundBrush}"/>
                <Setter Property="Background" TargetName="btnMin" Value="#2694C8EC" />
                <Setter Property="Background" TargetName="Restore" Value="#2694C8EC" />
                <Setter Property="Background" TargetName="Maximize" Value="#2694C8EC" />
                <Setter Property="Background" TargetName="btnClose" Value="#66EA4848" />
            </Trigger>
            <!--最大化时设置阴影尺寸为0，以及内容区域扩充-->
            <Trigger Property="WindowState" Value="Maximized">
                <!--<Setter Property="WindowShadowMargin" Value="0" />-->
                <Setter Property="BorderThickness" Value="0,3,0,0" />
                <!--<Setter Property="Effect" TargetName="borderFrame" Value="{x:Null}" />-->
                <Setter TargetName="Maximize" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="Restore" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="WindowState" Value="Normal">
                <Setter TargetName="Maximize" Property="Visibility" Value="Visible" />
                <Setter TargetName="Restore" Property="Visibility" Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--窗口整体风格-->
    <Style TargetType="{x:Type local:GlassWindow}">
        <Setter Property="Foreground" 
			Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template" Value="{StaticResource BaseWindowControlTemplate}"/>
        <Setter Property="BorderBrush" Value="#FFC5C5C5" />
        <Setter Property="BorderThickness" Value="5" />
        <Setter Property="OpacityMask" Value="White"/>
        <Setter Property="GlassBackgroundBrush" Value="{DynamicResource TitleBackgroundBrush}"/>
        <Style.Triggers>
            <!--<Trigger Property="IsActive" Value="True">
                <Setter Property="BorderBrush" Value="{Binding ActiveWindowBorderBrush ,RelativeSource={RelativeSource Self}}"/>
            </Trigger>-->
            <Trigger Property="ResizeMode" 
    			Value="CanResizeWithGrip">
                <Setter Property="Template" 
    				Value="{StaticResource WindowTemplateKey}" />
            </Trigger>

        </Style.Triggers>
    </Style>
</ResourceDictionary>